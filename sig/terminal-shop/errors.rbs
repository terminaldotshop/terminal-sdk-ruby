module TerminalShop
  class Error < StandardError
    attr_accessor cause: StandardError?
  end

  class ConversionError < TerminalShop::Error
  end

  class APIError < TerminalShop::Error
    attr_accessor url: URI::Generic

    attr_accessor status: Integer?

    attr_accessor body: top?

    def initialize: (
      url: URI::Generic,
      status: Integer?,
      body: Object?,
      request: nil,
      response: nil,
      message: String?
    ) -> void
  end

  class APIConnectionError < TerminalShop::APIError
    def initialize: (
      url: URI::Generic,
      status: nil,
      body: nil,
      request: nil,
      response: nil,
      message: String?
    ) -> void
  end

  class APITimeoutError < TerminalShop::APIConnectionError
    def initialize: (
      url: URI::Generic,
      status: nil,
      body: nil,
      request: nil,
      response: nil,
      message: String?
    ) -> void
  end

  class APIStatusError < TerminalShop::APIError
    def self.for: (
      url: URI::Generic,
      status: Integer,
      body: Object?,
      request: nil,
      response: nil,
      message: String?
    ) -> instance

    def initialize: (
      url: URI::Generic,
      status: Integer,
      body: Object?,
      request: nil,
      response: nil,
      message: String?
    ) -> void
  end

  class BadRequestError < TerminalShop::APIStatusError
    HTTP_STATUS: 400
  end

  class AuthenticationError < TerminalShop::APIStatusError
    HTTP_STATUS: 401
  end

  class PermissionDeniedError < TerminalShop::APIStatusError
    HTTP_STATUS: 403
  end

  class NotFoundError < TerminalShop::APIStatusError
    HTTP_STATUS: 404
  end

  class ConflictError < TerminalShop::APIStatusError
    HTTP_STATUS: 409
  end

  class UnprocessableEntityError < TerminalShop::APIStatusError
    HTTP_STATUS: 422
  end

  class RateLimitError < TerminalShop::APIStatusError
    HTTP_STATUS: 429
  end

  class InternalServerError < TerminalShop::APIStatusError
    HTTP_STATUS: Range[Integer]
  end
end
