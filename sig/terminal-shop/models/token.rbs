module TerminalShop
  module Models
    type token_api =
      { id: String, token: String, time: TerminalShop::Models::TokenAPI::Time }

    class TokenAPI < TerminalShop::BaseModel
      attr_accessor id: String

      attr_accessor token: String

      attr_accessor time: TerminalShop::Models::TokenAPI::Time

      def initialize:
        (
          id: String,
          token: String,
          time: TerminalShop::Models::TokenAPI::Time
        ) -> void
        | (
          ?TerminalShop::Models::token_api | TerminalShop::BaseModel data
        ) -> void

      def to_hash: -> TerminalShop::Models::token_api

      type time = { created: String }

      class Time < TerminalShop::BaseModel
        attr_accessor created: String

        def initialize:
          (created: String) -> void
          | (
            ?TerminalShop::Models::TokenAPI::time | TerminalShop::BaseModel data
          ) -> void

        def to_hash: -> TerminalShop::Models::TokenAPI::time
      end
    end
  end
end
