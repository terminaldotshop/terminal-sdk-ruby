module TerminalShop
  module Models
    type view_init_response =
      { data: TerminalShop::Models::ViewInitResponse::Data }

    class ViewInitResponse < TerminalShop::BaseModel
      attr_accessor data: TerminalShop::Models::ViewInitResponse::Data

      def initialize:
        (data: TerminalShop::Models::ViewInitResponse::Data) -> void
        | (
          ?TerminalShop::Models::view_init_response
          | TerminalShop::BaseModel data
        ) -> void

      def to_hash: -> TerminalShop::Models::view_init_response

      type data =
        {
          addresses: ::Array[TerminalShop::Models::AddressAPI],
          apps: ::Array[TerminalShop::Models::AppAPI],
          cards: ::Array[TerminalShop::Models::CardAPI],
          cart: TerminalShop::Models::CartAPI,
          orders: ::Array[TerminalShop::Models::OrderAPI],
          products: ::Array[TerminalShop::Models::ProductAPI],
          profile: TerminalShop::Models::ProfileAPI,
          region: TerminalShop::Models::ViewInitResponse::Data::region,
          subscriptions: ::Array[TerminalShop::Models::SubscriptionAPI],
          tokens: ::Array[TerminalShop::Models::TokenAPI]
        }

      class Data < TerminalShop::BaseModel
        attr_accessor addresses: ::Array[TerminalShop::Models::AddressAPI]

        attr_accessor apps: ::Array[TerminalShop::Models::AppAPI]

        attr_accessor cards: ::Array[TerminalShop::Models::CardAPI]

        attr_accessor cart: TerminalShop::Models::CartAPI

        attr_accessor orders: ::Array[TerminalShop::Models::OrderAPI]

        attr_accessor products: ::Array[TerminalShop::Models::ProductAPI]

        attr_accessor profile: TerminalShop::Models::ProfileAPI

        attr_accessor region: TerminalShop::Models::ViewInitResponse::Data::region

        attr_accessor subscriptions: ::Array[TerminalShop::Models::SubscriptionAPI]

        attr_accessor tokens: ::Array[TerminalShop::Models::TokenAPI]

        def initialize:
          (
            addresses: ::Array[TerminalShop::Models::AddressAPI],
            apps: ::Array[TerminalShop::Models::AppAPI],
            cards: ::Array[TerminalShop::Models::CardAPI],
            cart: TerminalShop::Models::CartAPI,
            orders: ::Array[TerminalShop::Models::OrderAPI],
            products: ::Array[TerminalShop::Models::ProductAPI],
            profile: TerminalShop::Models::ProfileAPI,
            region: TerminalShop::Models::ViewInitResponse::Data::region,
            subscriptions: ::Array[TerminalShop::Models::SubscriptionAPI],
            tokens: ::Array[TerminalShop::Models::TokenAPI]
          ) -> void
          | (
            ?TerminalShop::Models::ViewInitResponse::data
            | TerminalShop::BaseModel data
          ) -> void

        def to_hash: -> TerminalShop::Models::ViewInitResponse::data

        type region = :eu | :na

        class Region < TerminalShop::Enum
          EU: :eu
          NA: :na

          def self.values: -> ::Array[TerminalShop::Models::ViewInitResponse::Data::region]
        end
      end
    end
  end
end
