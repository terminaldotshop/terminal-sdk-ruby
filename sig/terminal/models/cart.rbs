module Terminal
  module Models
    type cart_api =
      {
        amount: Terminal::Models::CartAPI::Amount,
        items: Array[Terminal::Models::CartAPI::Item],
        subtotal: Integer,
        address_id: String,
        card_id: String,
        shipping: Terminal::Models::CartAPI::Shipping
      }

    class CartAPI < Terminal::BaseModel
      attr_accessor amount: Terminal::Models::CartAPI::Amount

      attr_accessor items: Array[Terminal::Models::CartAPI::Item]

      attr_accessor subtotal: Integer

      attr_reader address_id: String?

      def address_id=: (String) -> void

      attr_reader card_id: String?

      def card_id=: (String) -> void

      attr_reader shipping: Terminal::Models::CartAPI::Shipping?

      def shipping=: (Terminal::Models::CartAPI::Shipping) -> void

      def initialize:
        (
          amount: Terminal::Models::CartAPI::Amount,
          items: Array[Terminal::Models::CartAPI::Item],
          subtotal: Integer,
          address_id: String,
          card_id: String,
          shipping: Terminal::Models::CartAPI::Shipping
        ) -> void
        | (?Terminal::Models::cart_api | Terminal::BaseModel data) -> void

      def to_hash: -> Terminal::Models::cart_api

      type amount = { subtotal: Integer, shipping: Integer }

      class Amount < Terminal::BaseModel
        attr_accessor subtotal: Integer

        attr_reader shipping: Integer?

        def shipping=: (Integer) -> void

        def initialize:
          (subtotal: Integer, shipping: Integer) -> void
          | (
            ?Terminal::Models::CartAPI::amount | Terminal::BaseModel data
          ) -> void

        def to_hash: -> Terminal::Models::CartAPI::amount
      end

      type item =
        {
          id: String,
          product_variant_id: String,
          quantity: Integer,
          subtotal: Integer
        }

      class Item < Terminal::BaseModel
        attr_accessor id: String

        attr_accessor product_variant_id: String

        attr_accessor quantity: Integer

        attr_accessor subtotal: Integer

        def initialize:
          (
            id: String,
            product_variant_id: String,
            quantity: Integer,
            subtotal: Integer
          ) -> void
          | (
            ?Terminal::Models::CartAPI::item | Terminal::BaseModel data
          ) -> void

        def to_hash: -> Terminal::Models::CartAPI::item
      end

      type shipping = { service: String, timeframe: String }

      class Shipping < Terminal::BaseModel
        attr_reader service: String?

        def service=: (String) -> void

        attr_reader timeframe: String?

        def timeframe=: (String) -> void

        def initialize:
          (service: String, timeframe: String) -> void
          | (
            ?Terminal::Models::CartAPI::shipping | Terminal::BaseModel data
          ) -> void

        def to_hash: -> Terminal::Models::CartAPI::shipping
      end
    end
  end
end
