module Terminal
  module Models
    type order_api =
      {
        id: String,
        amount: Terminal::Models::OrderAPI::Amount,
        items: Array[Terminal::Models::OrderAPI::Item],
        shipping: Terminal::Models::OrderAPI::Shipping,
        tracking: Terminal::Models::OrderAPI::Tracking,
        index: Integer
      }

    class OrderAPI < Terminal::BaseModel
      attr_accessor id: String

      attr_accessor amount: Terminal::Models::OrderAPI::Amount

      attr_accessor items: Array[Terminal::Models::OrderAPI::Item]

      attr_accessor shipping: Terminal::Models::OrderAPI::Shipping

      attr_accessor tracking: Terminal::Models::OrderAPI::Tracking

      attr_reader index: Integer?

      def index=: (Integer) -> void

      def initialize:
        (
          id: String,
          amount: Terminal::Models::OrderAPI::Amount,
          items: Array[Terminal::Models::OrderAPI::Item],
          shipping: Terminal::Models::OrderAPI::Shipping,
          tracking: Terminal::Models::OrderAPI::Tracking,
          index: Integer
        ) -> void
        | (?Terminal::Models::order_api | Terminal::BaseModel data) -> void

      def to_hash: -> Terminal::Models::order_api

      type amount = { shipping: Integer, subtotal: Integer }

      class Amount < Terminal::BaseModel
        attr_accessor shipping: Integer

        attr_accessor subtotal: Integer

        def initialize:
          (shipping: Integer, subtotal: Integer) -> void
          | (
            ?Terminal::Models::OrderAPI::amount | Terminal::BaseModel data
          ) -> void

        def to_hash: -> Terminal::Models::OrderAPI::amount
      end

      type item =
        {
          id: String,
          amount: Integer,
          quantity: Integer,
          description: String,
          product_variant_id: String
        }

      class Item < Terminal::BaseModel
        attr_accessor id: String

        attr_accessor amount: Integer

        attr_accessor quantity: Integer

        attr_reader description: String?

        def description=: (String) -> void

        attr_reader product_variant_id: String?

        def product_variant_id=: (String) -> void

        def initialize:
          (
            id: String,
            amount: Integer,
            quantity: Integer,
            description: String,
            product_variant_id: String
          ) -> void
          | (
            ?Terminal::Models::OrderAPI::item | Terminal::BaseModel data
          ) -> void

        def to_hash: -> Terminal::Models::OrderAPI::item
      end

      type shipping =
        {
          city: String,
          country: String,
          name: String,
          :street1 => String,
          zip: String,
          phone: String,
          province: String,
          :street2 => String
        }

      class Shipping < Terminal::BaseModel
        attr_accessor city: String

        attr_accessor country: String

        attr_accessor name: String

        attr_accessor street1: String

        attr_accessor zip: String

        attr_reader phone: String?

        def phone=: (String) -> void

        attr_reader province: String?

        def province=: (String) -> void

        attr_reader street2: String?

        def street2=: (String) -> void

        def initialize:
          (
            city: String,
            country: String,
            name: String,
            street1: String,
            zip: String,
            phone: String,
            province: String,
            street2: String
          ) -> void
          | (
            ?Terminal::Models::OrderAPI::shipping | Terminal::BaseModel data
          ) -> void

        def to_hash: -> Terminal::Models::OrderAPI::shipping
      end

      type tracking = { number: String, service: String, url: String }

      class Tracking < Terminal::BaseModel
        attr_reader number: String?

        def number=: (String) -> void

        attr_reader service: String?

        def service=: (String) -> void

        attr_reader url: String?

        def url=: (String) -> void

        def initialize:
          (number: String, service: String, url: String) -> void
          | (
            ?Terminal::Models::OrderAPI::tracking | Terminal::BaseModel data
          ) -> void

        def to_hash: -> Terminal::Models::OrderAPI::tracking
      end
    end
  end
end
