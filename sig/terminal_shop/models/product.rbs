module TerminalShop
  module Models
    type product_api =
      {
        id: String,
        description: String,
        name: String,
        variants: ::Array[TerminalShop::Models::ProductVariant],
        order: Integer,
        subscription: TerminalShop::Models::ProductAPI::subscription,
        tags: TerminalShop::Models::ProductAPI::Tags
      }

    class ProductAPI < TerminalShop::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor description: String

      attr_accessor name: String

      attr_accessor variants: ::Array[TerminalShop::Models::ProductVariant]

      attr_reader order: Integer?

      def order=: (Integer) -> Integer

      attr_reader subscription: TerminalShop::Models::ProductAPI::subscription?

      def subscription=: (
        TerminalShop::Models::ProductAPI::subscription
      ) -> TerminalShop::Models::ProductAPI::subscription

      attr_reader tags: TerminalShop::Models::ProductAPI::Tags?

      def tags=: (
        TerminalShop::Models::ProductAPI::Tags
      ) -> TerminalShop::Models::ProductAPI::Tags

      def initialize: (
        id: String,
        description: String,
        name: String,
        variants: ::Array[TerminalShop::Models::ProductVariant],
        ?order: Integer,
        ?subscription: TerminalShop::Models::ProductAPI::subscription,
        ?tags: TerminalShop::Models::ProductAPI::Tags
      ) -> void

      def to_hash: -> TerminalShop::Models::product_api

      type subscription = :allowed | :required

      module Subscription
        extend TerminalShop::Internal::Type::Enum

        ALLOWED: :allowed
        REQUIRED: :required

        def self?.values: -> ::Array[TerminalShop::Models::ProductAPI::subscription]
      end

      type tags =
        {
          app: String,
          color: String,
          featured: bool,
          market_eu: bool,
          market_global: bool,
          market_na: bool
        }

      class Tags < TerminalShop::Internal::Type::BaseModel
        attr_reader app: String?

        def app=: (String) -> String

        attr_reader color: String?

        def color=: (String) -> String

        attr_reader featured: bool?

        def featured=: (bool) -> bool

        attr_reader market_eu: bool?

        def market_eu=: (bool) -> bool

        attr_reader market_global: bool?

        def market_global=: (bool) -> bool

        attr_reader market_na: bool?

        def market_na=: (bool) -> bool

        def initialize: (
          ?app: String,
          ?color: String,
          ?featured: bool,
          ?market_eu: bool,
          ?market_global: bool,
          ?market_na: bool
        ) -> void

        def to_hash: -> TerminalShop::Models::ProductAPI::tags
      end
    end
  end
end
