module TerminalShop
  module Models
    type order_api =
      {
        id: String,
        amount: TerminalShop::OrderAPI::Amount,
        created: String,
        items: ::Array[TerminalShop::OrderAPI::Item],
        shipping: TerminalShop::OrderAPI::Shipping,
        tracking: TerminalShop::OrderAPI::Tracking,
        index: Integer
      }

    class OrderAPI < TerminalShop::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor amount: TerminalShop::OrderAPI::Amount

      attr_accessor created: String

      attr_accessor items: ::Array[TerminalShop::OrderAPI::Item]

      attr_accessor shipping: TerminalShop::OrderAPI::Shipping

      attr_accessor tracking: TerminalShop::OrderAPI::Tracking

      attr_reader index: Integer?

      def index=: (Integer) -> Integer

      def initialize: (
        id: String,
        amount: TerminalShop::OrderAPI::Amount,
        created: String,
        items: ::Array[TerminalShop::OrderAPI::Item],
        shipping: TerminalShop::OrderAPI::Shipping,
        tracking: TerminalShop::OrderAPI::Tracking,
        ?index: Integer
      ) -> void

      type amount = { shipping: Integer, subtotal: Integer }

      class Amount < TerminalShop::Internal::Type::BaseModel
        attr_accessor shipping: Integer

        attr_accessor subtotal: Integer

        def initialize: (shipping: Integer, subtotal: Integer) -> void
      end

      type item =
        {
          id: String,
          amount: Integer,
          quantity: Integer,
          description: String,
          product_variant_id: String
        }

      class Item < TerminalShop::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor amount: Integer

        attr_accessor quantity: Integer

        attr_reader description: String?

        def description=: (String) -> String

        attr_reader product_variant_id: String?

        def product_variant_id=: (String) -> String

        def initialize: (
          id: String,
          amount: Integer,
          quantity: Integer,
          ?description: String,
          ?product_variant_id: String
        ) -> void
      end

      type shipping =
        {
          city: String,
          country: String,
          name: String,
          :street1 => String,
          zip: String,
          phone: String,
          province: String,
          :street2 => String
        }

      class Shipping < TerminalShop::Internal::Type::BaseModel
        attr_accessor city: String

        attr_accessor country: String

        attr_accessor name: String

        attr_accessor street1: String

        attr_accessor zip: String

        attr_reader phone: String?

        def phone=: (String) -> String

        attr_reader province: String?

        def province=: (String) -> String

        attr_reader street2: String?

        def street2=: (String) -> String

        def initialize: (
          city: String,
          country: String,
          name: String,
          street1: String,
          zip: String,
          ?phone: String,
          ?province: String,
          ?street2: String
        ) -> void
      end

      type tracking =
        {
          number: String,
          service: String,
          status: TerminalShop::OrderAPI::Tracking::status,
          status_details: String,
          status_updated_at: String,
          url: String
        }

      class Tracking < TerminalShop::Internal::Type::BaseModel
        attr_reader number: String?

        def number=: (String) -> String

        attr_reader service: String?

        def service=: (String) -> String

        attr_reader status: TerminalShop::OrderAPI::Tracking::status?

        def status=: (
          TerminalShop::OrderAPI::Tracking::status
        ) -> TerminalShop::OrderAPI::Tracking::status

        attr_reader status_details: String?

        def status_details=: (String) -> String

        attr_reader status_updated_at: String?

        def status_updated_at=: (String) -> String

        attr_reader url: String?

        def url=: (String) -> String

        def initialize: (
          ?number: String,
          ?service: String,
          ?status: TerminalShop::OrderAPI::Tracking::status,
          ?status_details: String,
          ?status_updated_at: String,
          ?url: String
        ) -> void

        type status =
          :PRE_TRANSIT | :TRANSIT | :DELIVERED | :RETURNED | :FAILURE | :UNKNOWN

        module Status
          extend TerminalShop::Internal::Type::Enum

          PRE_TRANSIT: :PRE_TRANSIT
          TRANSIT: :TRANSIT
          DELIVERED: :DELIVERED
          RETURNED: :RETURNED
          FAILURE: :FAILURE
          UNKNOWN: :UNKNOWN

          def self?.values: -> ::Array[TerminalShop::OrderAPI::Tracking::status]
        end
      end
    end
  end
end
