module TerminalShop
  module Models
    type product_variant =
      {
        id: String,
        name: String,
        price: Integer,
        description: String,
        tags: TerminalShop::ProductVariant::Tags
      }

    class ProductVariant < TerminalShop::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor name: String

      attr_accessor price: Integer

      attr_reader description: String?

      def description=: (String) -> String

      attr_reader tags: TerminalShop::ProductVariant::Tags?

      def tags=: (
        TerminalShop::ProductVariant::Tags
      ) -> TerminalShop::ProductVariant::Tags

      def initialize: (
        id: String,
        name: String,
        price: Integer,
        ?description: String,
        ?tags: TerminalShop::ProductVariant::Tags
      ) -> void

      type tags =
        { app: String, market_eu: bool, market_global: bool, market_na: bool }

      class Tags < TerminalShop::Internal::Type::BaseModel
        attr_reader app: String?

        def app=: (String) -> String

        attr_reader market_eu: bool?

        def market_eu=: (bool) -> bool

        attr_reader market_global: bool?

        def market_global=: (bool) -> bool

        attr_reader market_na: bool?

        def market_na=: (bool) -> bool

        def initialize: (
          ?app: String,
          ?market_eu: bool,
          ?market_global: bool,
          ?market_na: bool
        ) -> void
      end
    end
  end
end
